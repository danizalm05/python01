// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	   	/*in = load ( '0' or '1') only one output is 1 according to 'sel'*/
      DMux8Way(in = load, sel = address, a = inreg0, b = inreg1, c = inreg2, d = inreg3, e = inreg4, f = inreg5, g = inreg6, h = inreg7);
	   
	  Register(in = in, load = inreg0, out = outreg0);
	  Register(in = in, load = inreg1, out = outreg1);
	  Register(in = in, load = inreg2, out = outreg2);
	  Register(in = in, load = inreg3, out = outreg3);
	  Register(in = in, load = inreg4, out = outreg4);
	  Register(in = in, load = inreg5, out = outreg5);
	  Register(in = in, load = inreg6, out = outreg6);
	  Register(in = in, load = inreg7, out = outreg7);
	  
	  //8-way 16-bit multiplexor(8 registers of 16 bit length)
	  
	  Mux8Way16(a = outreg0, b = outreg1, c = outreg2, d = outreg3, e = outreg4, f = outreg5, g = outreg6, h = outreg7, sel = address, out = out);
	  
}
