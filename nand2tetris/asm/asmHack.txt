
https://www.coursera.org/learn/build-a-computer/home/week/1
https://courses.campus.gov.il/courses/course-v1:HUJI+ACD_HUJI_nand2tetris+2020_1/course/

 
HDL-Based Chip Simulation 
https://www.youtube.com/watch?v=iSNfqzJUWW4

http://nand2tetris-questions-and-answers-forum.52.s1.nabble.com/Hardware-Construction-Survival-Kit-td3385741.html
http://nand2tetris-questions-and-answers-forum.52.s1.nabble.com/Comparison-Failure-for-quot-AND-quot-gate-td4037234.html

https://github.com/Gunasekare/nand2tetris
https://www.nand2tetris.org/
   
https://courses.campus.gov.il/courses/course-v1:HUJI+ACD_HUJI_nand2tetris+2020_1/courseware/e966e5c59f414d1f9b92396f05889394/6f60522e532d4e57b81cd179122910f2/
12:00



                     Registers
=============                        ==========
D:  (Data register) holds a 16 bit number
A: (addres  register and Data register): register that holds address of a command
R0-R15: 
M: the content of the addres choden by register  A. 


                 Addressing methods 
-----------                           -----------
1. Register Oriented 
     add R1, R2  #  
2.  Direct Addressing
     add R1, M[200] # r1 = r1 + memory 200 
3. Indirect Addressing 
     add R1, @A   #R1 =  R1   +   Content of A  as an addres    
4  Immediate 
     add R1, 79   R1 = R1 +79 
	 
	 

'A'  instruction
---------
The 'A'  instruction start with @ and a number or a symbol that refers to a number after it.  This command will insert the number to the 'A' gegister.

examples
----------
@29:    means A=29
@Sum:   means  A = the constant the is indicated by 'Sum'.

'c'  instruction
----------------------
x= {0,1,-1}: exmp D=0, A =-1, M=1
x=y where x = {A,D,M} y = (-1){A,D,M} exmp D=A D=M M =-M
x =y op z where x,y = {A,D,M} z = {A,D,M,1} and  y not equ to z
           op ={+,-}
    exmp D=D+M, A=A-1 M =D+1






examples
1. // D =19
      @19  |  D=A

2. // D=D+23
      @23  | D=D+A

3. // RAM[100] = 0
      @100 | M=0 
	  
4. // RAM[100] = 17	  
      @17 | D=A | @100 | M=D 
	  
5. // RAM[100] = RAM[200] 	  
      @200  
	  D=A // D = RAM[200] 
	  @100 
	  M=D 	// RAM[100] = RAM[200] 	  
// RAM[3] = RAM[3] 	- 15  
      @15    //A=15
	  D=A    // D =15
	  @3     //A=3
	  M = M - D	  //RAM[3] = RAM[3]- 15 

// RAM[2] = RAM[1] 	+ 20  
      @1    //A=1
	  D=M    // D = RAM[1]
	  @20     //A=20
	  D = D+A	  //RAM[1]+20  
	  @2  //A=2
	  M=D  // RAM[2] = RAM[1] 	+ 20  
	  
control commands    4.7 פקודות בקרה

	 
    	
	D;JGT //if D>0  jump to Rom (A)
	D;JGE //if D>=0 jump to Rom (A)
    D;JLT //if D<0  jump to Rom (A)	
	D;JLE //if D<=0 jump to Rom (A)	
	D;JEQ //if D==0 jump to Rom (A)
    D;JLE //if D!=0 jump to Rom (A)	
    0;JMP // jump to Rom (A)	


 	  